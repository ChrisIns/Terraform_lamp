# test cicd for terraform 4

name: Terraform

on:
  push:
    branches: [master,main]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: self-hosted
    env:
      working-directory: ../../
    defaults:
      run:
        working-directory: ${{ env.working-directory }}    
    steps:
      - name: Where am i
        id: where
        run: pwd
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check 
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - name: Extract git commit data
        uses: rlespinasse/git-commit-data-action@v1.x
      - name: Update author information
        run: echo ${{ env.GIT_COMMIT_AUTHOR_NAME }} > AUTHOR
          # test pr    
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{secrets.GITHUB_TOKEN }}
          committer: ${{env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}">
          author: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}">
          base: main
          branch: "master"
          delete-branch: false
          title: 'Terraform update success'
          body:
            Update test success
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
